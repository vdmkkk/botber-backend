services:
  postgres:
    image: postgres:16-alpine
    container_name: app_postgres
    environment:
      POSTGRES_DB: ${PG_DB:-app_db}
      POSTGRES_USER: ${PG_USER:-app}
      POSTGRES_PASSWORD: ${PG_PASSWORD:-app_pw}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "${PG_PORT:-5433}:5433"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER:-app} -d ${PG_DB:-app_db}"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7-alpine
    container_name: app_redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: ./app/backend
      dockerfile: Dockerfile
    container_name: app_api
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ./app/backend/.env # app config (DATABASE_URL, JWT, SMTP, etc.)
    ports:
      - "${SERVICE_PORT:-8080}:${SERVICE_PORT:-8080}"
    command: >
      sh -c "
      alembic -c alembic.ini upgrade head &&
      uvicorn app.main:app --host 0.0.0.0 --port ${SERVICE_PORT:-8080} --proxy-headers
      "

volumes:
  pg_data:
